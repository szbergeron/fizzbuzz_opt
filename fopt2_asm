fizzbuzz::fopt2:
 cmp     rdi, 2
 jl      .LBB2_1
 push    rbx
 lea     r8d, [rdi, -, 1]
 and     r8d, 1
 cmp     rdi, 2
 jne     .LBB2_7
 mov     r9d, 1
 xor     r10d, r10d
 xor     esi, esi
 xor     eax, eax
 test    r8, r8
 pop     rbx
 jne     .LBB2_5
 jmp     .LBB2_6
.LBB2_1:
 xor     eax, eax
 ret
.LBB2_7:
 sub     rdi, r8
 mov     ecx, 1
 xor     r10d, r10d
 xor     esi, esi
 xor     eax, eax
.LBB2_8:
 lea     rdx, [rcx, -, 3]
 lea     r9, [r10, +, 3]
 xor     r11d, r11d
 cmp     rdx, r10
 cmovne  r9, r10
 sete    r11b
 lea     r10, [rcx, -, 5]
 lea     rbx, [rsi, +, 5]
 xor     edx, edx
 cmp     r10, rsi
 sete    dl
 cmovne  rbx, rsi
 add     rdx, rax
 add     rdx, r11
 lea     rax, [rcx, -, 2]
 lea     r10, [r9, +, 3]
 xor     r11d, r11d
 cmp     rax, r9
 cmovne  r10, r9
 sete    r11b
 lea     r9, [rcx, +, 2]
 add     rcx, -4
 lea     rsi, [rbx, +, 5]
 xor     eax, eax
 cmp     rcx, rbx
 cmovne  rsi, rbx
 sete    al
 add     rax, rdx
 add     rax, r11
 mov     rcx, r9
 cmp     rdi, r9
 jne     .LBB2_8
 test    r8, r8
 pop     rbx
 je      .LBB2_6
.LBB2_5:
 lea     rcx, [r9, -, 5]
 xor     edx, edx
 cmp     rcx, rsi
 sete    dl
 add     rax, rdx
 add     r9, -3
 xor     ecx, ecx
 cmp     r9, r10
 sete    cl
 add     rax, rcx
.LBB2_6:
 ret
